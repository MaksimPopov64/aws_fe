{"version":3,"sources":["utils/utils.ts","store/cartSlice.ts","components/AddProductToCart/AddProductToCart.tsx","components/pages/PageProducts/components/Products.tsx","components/pages/PageProducts/PageProducts.tsx","components/MainLayout/components/Cart.tsx","components/MainLayout/components/Header.tsx","components/MainLayout/MainLayout.tsx","models/Product.ts","components/PaperLayout/PaperLayout.tsx","constants/apiPaths.ts","components/pages/PageProductForm/PageProductForm.tsx","components/CartItems/CartItems.tsx","components/pages/PageCart/components/ReviewCart.tsx","components/pages/PageCart/components/ReviewOrder.tsx","models/Order.ts","components/pages/PageCart/PageCart.tsx","components/pages/PageOrders/components/Orders.tsx","components/pages/PageOrders/PageOrders.tsx","constants/order.tsx","components/pages/PageOrder/PageOrder.tsx","components/pages/admin/PageProductImport/components/ProductsTable.tsx","components/pages/admin/PageProductImport/components/CSVFileImport.tsx","components/pages/admin/PageProductImport/PageProductImport.tsx","components/App/App.tsx","store/counterSlice.ts","store/store.ts","serviceWorker.ts","index.tsx"],"names":["priceFormatter","Intl","NumberFormat","style","currency","formatAsPrice","price","format","cartSlice","createSlice","name","initialState","items","reducers","addToCart","state","action","product","payload","existingItem","find","i","id","count","push","removeFromCart","filter","clearCart","actions","selectCartItems","cart","AddProductToCart","dispatch","useDispatch","cartItem","useSelector","IconButton","onClick","color","Typography","align","useStyles","makeStyles","theme","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","backgroundColor","palette","background","paper","padding","spacing","Products","classes","useState","products","setProducts","useEffect","productList","Grid","container","map","index","item","key","xs","sm","md","Card","className","CardMedia","image","title","CardContent","gutterBottom","variant","component","CardActions","content","PageProducts","Cart","badgeContent","length","undefined","aria-label","Link","to","Badge","createStyles","root","menuButton","marginRight","homeLink","textDecoration","Header","React","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Copyright","href","Date","getFullYear","paddingBottom","MainLayout","children","Container","maxWidth","ProductSchema","Yup","shape","required","description","layout","width","marginLeft","breakpoints","up","marginTop","marginBottom","PaperLayout","Paper","API_PATHS","order","import","bff","Form","props","dirty","isSubmitting","isValid","handleSubmit","onSubmit","autoComplete","TextField","label","fullWidth","multiline","justify","Button","type","disabled","emptyValues","cast","PageProductForm","history","useHistory","useParams","setProduct","isLoading","setIsLoading","axios","get","then","res","data","initialValues","validationSchema","values","formattedValues","productToSave","put","listItem","total","fontWeight","CartItems","isEditable","totalPrice","reduce","List","disablePadding","ListItem","ListItemText","primary","secondary","ReviewCart","cartItems","Fragment","ReviewOrder","address","firstName","lastName","direction","comment","AddressSchema","default","defined","OrderItemSchema","productId","integer","positive","OrderSchema","of","status","stepper","buttons","justifyContent","button","steps","initialAddressValues","CartIsEmpty","Success","PageCart","activeStep","setActiveStep","isCartEmpty","setAddress","isFormValid","setIsFormValid","Stepper","Step","StepLabel","enableReinitialize","isInitialValid","Orders","orders","setOrders","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","statusHistory","toUpperCase","size","delete","PageOrders","ORDER_STATUS","ORDER_STATUS_FLOW","helperText","select","value","PageOrder","setOrder","setCartItems","promises","Promise","all","p","lastStatusItem","statusHistoryItem","timestamp","toString","ProductsTable","CSVFileImport","url","file","setFile","uploadUrl","setUploadUrl","uploadFile","e","a","method","response","console","log","binary","atob","split","array","charCodeAt","blobData","Blob","Uint8Array","uploadURL","fetch","body","result","onChange","files","target","dataTransfer","reader","FileReader","onload","readAsDataURL","createFile","PageProductImport","Box","alignItems","App","path","exact","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","cartReducer","window","location","hostname","match","interceptors","use","error","alert","reject","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ad2593a5.chunk.js","sourcesContent":["const priceFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nexport const formatAsPrice = (price: number) => priceFormatter.format(price);","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {RootState} from 'store/store';\nimport {Product} from \"models/Product\";\nimport {CartItem} from \"models/CartItem\";\n\ninterface CartState {\n  items: CartItem[]\n}\n\nconst initialState: CartState = {\n  items: [],\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    addToCart: (state, action: PayloadAction<Product>) => {\n      const {items} = state;\n      const {payload: product} = action;\n      const existingItem = items.find(i => i.product.id === product.id);\n      if (existingItem) {\n        existingItem.count++;\n        return;\n      }\n      items.push({product, count: 1});\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    removeFromCart: (state, action: PayloadAction<Product>) => {\n      let {items} = state;\n      const {payload: product} = action;\n      const existingItem = items.find(i => i.product.id === product.id);\n      if (!existingItem) return;\n      if (existingItem.count > 1) {\n        existingItem.count--;\n        return;\n      }\n      state.items = items.filter(i => i.product.id !== product.id);\n    },\n    clearCart: (state) => {\n      state.items = [];\n    }\n  },\n});\n\nexport const {addToCart, removeFromCart, clearCart} = cartSlice.actions;\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.cart.value)`\nexport const selectCartItems = (state: RootState) => state.cart.items;\n\nexport default cartSlice.reducer;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {Product} from \"models/Product\";\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\nimport Add from \"@material-ui/icons/Add\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addToCart, selectCartItems, removeFromCart} from \"store/cartSlice\";\n\ntype AddProductToCartProps = {\n  product: Product\n};\n\nexport default function AddProductToCart({product}: AddProductToCartProps) {\n  const dispatch = useDispatch();\n  const cartItems = useSelector(selectCartItems);\n  const cartItem = cartItems.find(i => i.product.id === product.id);\n\n  return (\n    <>\n    {\n      cartItem ?\n        (\n          <>\n            <IconButton onClick={() => dispatch(removeFromCart(product))}>\n              <Remove color={\"secondary\"}/>\n            </IconButton>\n            <Typography align=\"center\">\n              {cartItem.count}\n            </Typography>\n            <IconButton onClick={() => dispatch(addToCart(product))}>\n              <Add color={\"secondary\"}/>\n            </IconButton>\n            </>\n        )\n        :\n        (\n          <IconButton onClick={() => dispatch(addToCart(product))}>\n            <CartIcon color={\"secondary\"}/>\n          </IconButton>\n        )\n    }\n    </>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Product} from \"models/Product\";\nimport {formatAsPrice} from \"utils/utils\";\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\n// import axios from 'axios';\n// import API_PATHS from \"constants/apiPaths\";\nimport productList from \"./productList.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Products() {\n  const classes = useStyles();\n  const [products, setProducts] = useState<Product[]>([]);\n\n  useEffect(() => {\n    // axios.get(`${API_PATHS.bff}/product/available/`)\n    //   .then(res => setProducts(res.data));\n    setProducts(productList);\n  }, [])\n\n  return (\n    <Grid container spacing={4}>\n      {products.map((product: Product, index: number) => (\n        <Grid item key={product.id} xs={12} sm={6} md={4}>\n          <Card className={classes.card}>\n            <CardMedia\n              className={classes.cardMedia}\n              image={`https://source.unsplash.com/random?sig=${index}`}\n              title=\"Image title\"\n            />\n            <CardContent className={classes.cardContent}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {product.title}\n              </Typography>\n              <Typography>\n                {formatAsPrice(product.price)}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <AddProductToCart product={product}/>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Products from \"components/pages/PageProducts/components/Products\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\nexport default function PageProducts() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Products/>\n    </div>\n  );\n}","import Badge from \"@material-ui/core/Badge\";\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectCartItems } from \"store/cartSlice\";\nimport { Link } from 'react-router-dom';\n\nexport default function Cart() {\n  const cartItems = useSelector(selectCartItems);\n  const badgeContent = cartItems.length || undefined;\n\n  return (\n    <IconButton \n      aria-label=\"show 4 new mails\" \n      color=\"inherit\" \n      component={Link} \n      to=\"/cart\"\n    >\n      <Badge badgeContent={badgeContent} color=\"secondary\">\n        <CartIcon/>\n      </Badge>\n    </IconButton>\n  );\n}\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Cart from \"components/MainLayout/components/Cart\";\nimport {Link} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    homeLink: {\n      color: 'white',\n      textDecoration: 'none'\n    }\n  }),\n);\n\nexport default function Header() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const auth = true;\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          <Link className={classes.homeLink} to=\"/\">My Store!</Link>\n        </Typography>\n\n        {auth && (\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle/>\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem component={Link} to=\"/admin/orders\" onClick={handleClose}>Manage orders</MenuItem>\n              <MenuItem component={Link} to=\"/admin/products\" onClick={handleClose}>Manage products</MenuItem>\n            </Menu>\n          </div>\n        )}\n        <Cart/>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Container from \"@material-ui/core/Container\";\nimport Header from \"components/MainLayout/components/Header\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        My Store\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingBottom: theme.spacing(8),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst MainLayout: React.FC = ({children}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Header/>\n      <main>\n        <Container className={classes.container} maxWidth=\"md\">\n          {children!}\n        </Container>\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Thank you for your purchase!\n        </Typography>\n        <Copyright/>\n      </footer>\n    </>\n  );\n};\n\nexport default MainLayout;","import * as Yup from 'yup';\n\nexport type Product = {\n  id: string,\n  title: string,\n  description: string,\n  price: number,\n};\n\nexport const ProductSchema = Yup.object().shape({\n  title: Yup.string().required(),\n  description: Yup.string(),\n  price: Yup.number().required(),\n});\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n}));\n\nconst PaperLayout:React.FC = ({children}) =>  {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.layout}>\n      <Paper className={classes.paper}>\n        {children}\n      </Paper>\n    </div>\n  );\n};\n\nexport default PaperLayout;","\nconst API_PATHS = {\n  product: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  order: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  import: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  bff: 'https://.execute-api.eu-west-1.amazonaws.com/dev'\n};\n\nexport default API_PATHS;\n","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {Product, ProductSchema} from \"models/Product\";\nimport {Formik, Field, FormikProps, FormikValues} from 'formik';\nimport {TextField} from 'formik-material-ui';\nimport axios from 'axios';\nimport {useHistory, useParams} from 'react-router-dom';\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_PATHS from \"constants/apiPaths\";\n\nconst Form = (props: FormikProps<FormikValues>) => {\n  const {\n    // values,\n    // touched,\n    // errors,\n    dirty,\n    isSubmitting,\n    isValid,\n    // handleChange,\n    // handleBlur,\n    handleSubmit,\n    // handleReset,\n    // setFieldValue,\n    // isEditMode,\n    // onCancel,\n    // isButtonContact,\n    // setTouched,\n    // isButtonAddAndRedirect,\n    // setShouldRedirect,\n    // submitForm,\n    // onGetCitizen,\n    // shouldConfirmLeave,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"description\"\n            label=\"Description\"\n            fullWidth\n            autoComplete=\"off\"\n            multiline\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Field\n            component={TextField}\n            name=\"price\"\n            label=\"Price ($)\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Field\n            component={TextField}\n            name=\"count\"\n            label=\"Count\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item container xs={12} justify=\"space-between\">\n          <Button\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!dirty || isSubmitting || !isValid}\n          >\n            Save Product\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nconst emptyValues: any = ProductSchema.cast();\n\nexport default function PageProductForm() {\n  const history = useHistory();\n  const {id} = useParams();\n  const [product, setProduct] = useState<Product | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const onSubmit = (values: FormikValues) => {\n    const formattedValues = ProductSchema.cast(values);\n    const productToSave = id ? {...ProductSchema.cast(formattedValues), id} : formattedValues;\n    axios.put(`${API_PATHS.bff}/product`, productToSave)\n      .then(() => history.push('/admin/products'));\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setIsLoading(false);\n      return;\n    }\n    axios.get(`${API_PATHS.bff}/product/${id}`)\n      .then(res => {\n        setProduct(res.data);\n        setIsLoading(false);\n      });\n  }, [id])\n\n  if (isLoading) return <p>loading...</p>;\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        {id ? 'Edit product' : 'Create new product'}\n      </Typography>\n      <Formik\n        initialValues={product || emptyValues}\n        validationSchema={ProductSchema}\n        onSubmit={onSubmit}\n      >\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\n      </Formik>\n    </PaperLayout>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {CartItem} from \"models/CartItem\";\nimport {formatAsPrice} from \"utils/utils\";\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 500,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ntype CartItemsProps = {\n  items: CartItem[],\n  isEditable: boolean\n};\n\nexport default function CartItems({items, isEditable}: CartItemsProps) {\n  const classes = useStyles();\n\n  const totalPrice: number = items.reduce((total, item) => (item.count * item.product.price + total), 0);\n\n  return (\n    <>\n      <List disablePadding>\n        {items.map((cartItem: CartItem) => (\n          <ListItem className={classes.listItem} key={cartItem.product.id}>\n            {isEditable && <AddProductToCart product={cartItem.product}/>}\n            <ListItemText primary={cartItem.product.title} secondary={cartItem.product.description}/>\n            <Typography\n              variant=\"body2\">{formatAsPrice(cartItem.product.price)} x {cartItem.count} = {formatAsPrice(cartItem.product.price * cartItem.count)}</Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Shipping\"/>\n          <Typography\n            variant=\"body2\">Free</Typography>\n        </ListItem>\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\"/>\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            {formatAsPrice(totalPrice)}\n          </Typography>\n        </ListItem>\n      </List>\n    </>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CartItems from \"components/CartItems/CartItems\";\nimport {useSelector} from \"react-redux\";\nimport {selectCartItems} from \"store/cartSlice\";\n\nexport default function ReviewCart() {\n  const cartItems = useSelector(selectCartItems);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <CartItems items={cartItems} isEditable/>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CartItems from \"components/CartItems/CartItems\";\nimport {FormikValues} from \"formik\";\nimport {CartItem} from \"models/CartItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ntype ReviewOrderProps = {\n  address: FormikValues,\n  items: CartItem[]\n};\n\nexport default function ReviewOrder({address, items}:ReviewOrderProps) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <CartItems items={items} isEditable={false}/>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Shipping\n          </Typography>\n          <Typography gutterBottom>{address.firstName} {address.lastName}</Typography>\n          <Typography gutterBottom>{address.address}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Comment\n          </Typography>\n          <Typography gutterBottom>{address.comment}</Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import * as Yup from 'yup';\n\nexport const AddressSchema = Yup.object({\n  firstName: Yup.string().required(),\n  lastName: Yup.string().required(),\n  address: Yup.string().required(),\n  comment: Yup.string().default(''),\n}).defined();\n\nexport type Address = Yup.InferType<typeof AddressSchema>;\n\n\nexport const OrderItemSchema = Yup.object({\n  productId: Yup.string().required(),\n  count: Yup.number().integer().positive().required()\n}).defined();\n\nexport type OrderItem = Yup.InferType<typeof OrderItemSchema>;\n\n\nexport const OrderSchema = Yup.object({\n  id: Yup.string().required(),\n  items: Yup.array().of(OrderItemSchema),\n  address: AddressSchema,\n  status: Yup.string().required(),\n}).defined();\n\nexport type Order = Yup.InferType<typeof OrderSchema>;\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ReviewCart from 'components/pages/PageCart/components/ReviewCart';\nimport ReviewOrder from 'components/pages/PageCart/components/ReviewOrder';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectCartItems, clearCart} from \"store/cartSlice\";\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport {Formik, Form, FormikProps, FormikValues, FastField} from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {TextField} from 'formik-material-ui';\nimport axios from \"axios\";\nimport API_PATHS from \"constants/apiPaths\";\nimport {AddressSchema, OrderSchema} from \"models/Order\";\n\nconst useStyles = makeStyles((theme) => ({\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = ['Review your cart', 'Shipping address', 'Review your order'];\n\nconst initialAddressValues: any = AddressSchema.cast();\n\nconst CartIsEmpty = () => (\n  <Typography variant=\"h6\" gutterBottom>\n    The cart is empty. Didn't you like anything in our shop?\n  </Typography>\n);\n\nconst Success = () => (\n  <React.Fragment>\n    <Typography variant=\"h5\" gutterBottom>\n      Thank you for your order.\n    </Typography>\n    <Typography variant=\"subtitle1\">\n      Your order is placed. Our manager will call you soon to clarify the details.\n    </Typography>\n  </React.Fragment>\n);\n\nconst renderForm = () => (\n  <>\n    <Typography variant=\"h6\" gutterBottom>\n      Shipping address\n    </Typography>\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={6}>\n        <FastField\n          component={TextField}\n          name=\"lastName\"\n          label=\"Last Name\"\n          fullWidth\n          autoComplete=\"off\"\n          required\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <FastField\n          component={TextField}\n          name=\"firstName\"\n          label=\"First Name\"\n          fullWidth\n          autoComplete=\"off\"\n          required\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FastField\n          component={TextField}\n          name=\"address\"\n          label=\"Shipping address\"\n          fullWidth\n          autoComplete=\"off\"\n          multiline\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FastField\n          component={TextField}\n          name=\"comment\"\n          label=\"Comment\"\n          fullWidth\n          autoComplete=\"off\"\n          multiline\n        />\n      </Grid>\n    </Grid>\n  </>\n);\n\nexport default function PageCart() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState<number>(0);\n  const cartItems = useSelector(selectCartItems);\n  const isCartEmpty = !cartItems.length;\n  const [address, setAddress] = useState<FormikValues>(initialAddressValues);\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n    if (activeStep === 2) {\n      const formattedValues = OrderSchema.cast({\n        items: cartItems.map(i => ({productId: i.product.id, count: i.count})),\n        address\n      });\n      axios.put(`${API_PATHS.order}/order`, formattedValues)\n        .then(() => {\n          dispatch(clearCart());\n          setActiveStep(activeStep + 1);\n        });\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Checkout\n      </Typography>\n      <Stepper activeStep={activeStep} className={classes.stepper}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <React.Fragment>\n        <Formik\n          enableReinitialize={false}\n          initialValues={initialAddressValues}\n          validationSchema={AddressSchema}\n          isInitialValid={false}\n          onSubmit={() => undefined}\n        >\n          {(props: FormikProps<FormikValues>) => {\n            const {values, isValid} = props;\n            setAddress(values);\n            setIsFormValid(isValid);\n            return (\n              <Form>\n                {isCartEmpty && activeStep === 0 && <CartIsEmpty/>}\n                {activeStep === 0 && !isCartEmpty && <ReviewCart/>}\n                {activeStep === 1 && renderForm()}\n                {activeStep === 2 && <ReviewOrder address={address} items={cartItems}/>}\n                {activeStep === 3 && <Success/>}\n              </Form>\n            )\n          }}\n        </Formik>\n\n        {activeStep <= 2 && <div className={classes.buttons}>\n          {activeStep !== 0 && (\n            <Button onClick={handleBack} className={classes.button}>\n              Back\n            </Button>\n          )}\n          {!isCartEmpty && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleNext}\n              className={classes.button}\n              disabled={activeStep === 1 && !isFormValid}\n            >\n              {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n            </Button>)}\n        </div>}\n      </React.Fragment>\n    </PaperLayout>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport API_PATHS from \"constants/apiPaths\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\n\nexport default function Orders() {\n  const [orders, setOrders] = useState<any>([]);\n\n  useEffect(() => {\n    axios.get(`${API_PATHS.order}/order`)\n      .then(res => setOrders(res.data));\n  }, []);\n\n  const onDelete = (id: string) => {\n    axios.delete(`${API_PATHS.order}/order/${id}`)\n      .then(() => {\n        axios.get(`${API_PATHS.order}/order`)\n          .then(res => setOrders(res.data));\n        }\n      );\n  };\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>From</TableCell>\n            <TableCell align=\"right\">Items count</TableCell>\n            <TableCell align=\"right\">Address</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.map((order: any) => (\n            <TableRow key={order.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {order.address?.firstName} {order.address?.lastName}\n              </TableCell>\n              <TableCell align=\"right\">{order.items.length}</TableCell>\n              <TableCell align=\"right\">{order.address?.address}</TableCell>\n              <TableCell align=\"right\">{order.statusHistory[order.statusHistory.length-1].status.toUpperCase()}</TableCell>\n              <TableCell align=\"right\">\n                <Button size=\"small\" color=\"primary\" component={Link} to={`/admin/order/${order.id}`}>\n                  Manage\n                </Button>\n                <Button size=\"small\" color=\"secondary\" onClick={() => onDelete(order.id)}>\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Orders from \"components/pages/PageOrders/components/Orders\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\nexport default function PageOrders() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Typography variant=\"h6\" gutterBottom>\n        Manage orders\n      </Typography>\n      <Orders/>\n    </div>\n  );\n}\n","export const ORDER_STATUS = {\n  open: 'open',\n  approved: 'approved',\n  confirmed: 'confirmed',\n  sent: 'sent',\n  completed: 'completed',\n  cancelled: 'cancelled',\n};\n\nexport const ORDER_STATUS_FLOW = [\n  ORDER_STATUS.open,\n  ORDER_STATUS.approved,\n  ORDER_STATUS.confirmed,\n  ORDER_STATUS.sent,\n  ORDER_STATUS.completed,\n  ORDER_STATUS.cancelled,\n];\n","import React, {useEffect, useState} from 'react';\nimport {OrderItem} from \"models/Order\";\nimport axios from 'axios';\nimport {useParams} from 'react-router-dom';\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_PATHS from \"constants/apiPaths\";\nimport {CartItem} from \"models/CartItem\";\nimport {Product} from \"models/Product\";\nimport ReviewOrder from \"components/pages/PageCart/components/ReviewOrder\";\nimport {ORDER_STATUS, ORDER_STATUS_FLOW} from \"constants/order\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Field, Formik, FormikProps, FormikValues} from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {TextField} from \"formik-material-ui\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\nconst Form = (props: FormikProps<FormikValues>) => {\n  const {\n    values,\n    // touched,\n    // errors,\n    dirty,\n    isSubmitting,\n    isValid,\n    // handleChange,\n    // handleBlur,\n    handleSubmit,\n    // handleReset,\n    // setFieldValue,\n    // isEditMode,\n    // onCancel,\n    // isButtonContact,\n    // setTouched,\n    // isButtonAddAndRedirect,\n    // setShouldRedirect,\n    // submitForm,\n    // onGetCitizen,\n    // shouldConfirmLeave,\n  } = props;\n  let helperText = '';\n  if ((values.status) === ORDER_STATUS.approved) {\n    helperText = 'Setting status to APPROVED will decrease products count from stock!!!';\n  }\n  // TODO add check if status was changed from approved to cancelled\n  //  to increase product count back again\n  // if ((values.status) === ORDER_STATUS.cancelled) {\n  //   helperText = 'Setting status to CANCELLED will increase products count in stock!!!';\n  // }\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"status\"\n            label=\"Status\"\n            select\n            fullWidth\n            helperText={helperText}\n          >\n            {ORDER_STATUS_FLOW.map((status,index) => (\n              <MenuItem key={index} value={status}>\n                {status}\n              </MenuItem>\n            ))}\n          </Field>\n        </Grid>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"comment\"\n            label=\"Comment\"\n            fullWidth\n            autoComplete=\"off\"\n            multiline\n          />\n        </Grid>\n        <Grid item container xs={12} justify=\"space-between\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!dirty || isSubmitting || !isValid}\n          >\n            Change status\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default function PageOrder() {\n  const {id} = useParams();\n  const [order, setOrder] = useState<any>({});\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const onChangeStatus = (values: FormikValues) => {\n    return axios.put(`${API_PATHS.order}/order/${order.id}/status`, values)\n      .then(({data}) => setOrder(data));\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setIsLoading(false);\n      return;\n    }\n    const promises: any[] = [\n      axios.get(`${API_PATHS.product}/product`),\n      axios.get(`${API_PATHS.order}/order/${id}`)\n    ];\n    Promise.all(promises)\n      .then(([{data: products}, {data: order}]) => {\n        const cartItems: CartItem[] = order.items.map((i: OrderItem) => ({\n          product: products.find((p: Product) => p.id === i.productId),\n          count: i.count\n        }));\n        setOrder(order);\n        setCartItems(cartItems);\n        setIsLoading(false);\n      });\n  }, [id])\n\n  if (isLoading) return <p>loading...</p>;\n\n  const statusHistory = order.statusHistory || [];\n\n  const lastStatusItem = statusHistory[statusHistory.length - 1];\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Manage order\n      </Typography>\n      <ReviewOrder address={order.address} items={cartItems}/>\n      <Typography variant=\"h6\">\n        Status:\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\">\n        {lastStatusItem?.status.toUpperCase()}\n      </Typography>\n      <Typography variant=\"h6\">\n        Change status:\n      </Typography>\n      <Formik\n        initialValues={{status: lastStatusItem.status, comment: ''}}\n        enableReinitialize\n        onSubmit={onChangeStatus}\n      >\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\n      </Formik>\n      <Typography variant=\"h6\">\n        Status history:\n      </Typography>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Status</TableCell>\n              <TableCell align=\"right\">Date and Time</TableCell>\n              <TableCell align=\"right\">Comment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {statusHistory.map((statusHistoryItem: any) => (\n              <TableRow key={order.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {statusHistoryItem.status.toUpperCase()}\n                </TableCell>\n                <TableCell align=\"right\">{(new Date(statusHistoryItem.timestamp)).toString()}</TableCell>\n                <TableCell align=\"right\">{statusHistoryItem.comment}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </PaperLayout>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport API_PATHS from \"constants/apiPaths\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\nimport {formatAsPrice} from \"utils/utils\";\n\nexport default function ProductsTable() {\n  const [products, setProducts] = useState<any>([]);\n\n  useEffect(() => {\n    axios.get(`${API_PATHS.bff}/product`)\n      .then(res => setProducts(res.data));\n  }, []);\n\n  const onDelete = (id: string) => {\n    axios.delete(`${API_PATHS.bff}/product/${id}`)\n      .then(() => {\n        axios.get(`${API_PATHS.bff}/product`)\n          .then(res => setProducts(res.data));\n        }\n      );\n  };\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell align=\"right\">Description</TableCell>\n            <TableCell align=\"right\">Price</TableCell>\n            <TableCell align=\"right\">Count</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {products.map((product: any) => (\n            <TableRow key={product.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {product.title}\n              </TableCell>\n              <TableCell align=\"right\">{product.description}</TableCell>\n              <TableCell align=\"right\">{formatAsPrice(product.price)}</TableCell>\n              <TableCell align=\"right\">{product.count}</TableCell>\n              <TableCell align=\"right\">\n                <Button size=\"small\" color=\"primary\" component={Link} to={`/admin/product-form/${product.id}`}>\n                  Manage\n                </Button>\n                <Button size=\"small\" color=\"secondary\" onClick={() => onDelete(product.id)}>\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\ntype CSVFileImportProps = {\n  url: string,\n  title: string\n};\n\nexport default function CSVFileImport({url, title}: CSVFileImportProps) {\n  const classes = useStyles();\n  const [file, setFile] = useState<any>();\n  const [uploadUrl, setUploadUrl] = useState<any>();\n\n  const createFile = (file: any) => {\n    let reader = new FileReader()\n    reader.onload = (e: any) => {\n      console.log(e.target.result);\n      setFile(e.target.result);\n    }\n    reader.readAsDataURL(file)\n  };\n\n  const onFileChange = (e: any) => {\n    console.log(e);\n    let files = e.target.files || e.dataTransfer.files\n    if (!files.length) return\n    createFile(files[0])\n  };\n\n  const removeFile = () => {\n    setFile('');\n  };\n\n  const uploadFile = async (e: any) => {\n      // Get the presigned URL\n      const response = await axios({\n        method: 'GET',\n        url\n      })\n      console.log('Response: ', response.data)\n      console.log('Uploading: ', file)\n      let binary = atob(file.split(',')[1])\n      let array = []\n      for (var i = 0; i < binary.length; i++) {\n        array.push(binary.charCodeAt(i))\n      }\n      let blobData = new Blob([new Uint8Array(array)], {type: 'text/plain'})\n      console.log('Uploading to: ', response.data.uploadURL)\n      const result = await fetch(response.data.uploadURL, {\n        method: 'PUT',\n        body: blobData\n      })\n      console.log('Result: ', result)\n      // Final URL for the user doesn't need the query string params\n      setUploadUrl(response.data.uploadURL.split('?')[0]);\n      setFile('');\n    }\n  ;\n\n  return (\n    <div className={classes.content}>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      {!file ? (\n          <input type=\"file\" onChange={onFileChange}/>\n      ) : (\n        <div>\n          {!uploadUrl && <button onClick={removeFile}>Remove file</button>}\n          {!uploadUrl && <button onClick={uploadFile}>Upload file</button>}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport API_PATHS from \"constants/apiPaths\";\nimport ProductsTable from \"components/pages/admin/PageProductImport/components/ProductsTable\";\nimport CSVFileImport from \"components/pages/admin/PageProductImport/components/CSVFileImport\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\nexport default function PageProductImport() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Box display=\"flex\" alignItems=\"center\">\n        <CSVFileImport url={`${API_PATHS.import}/product/import`} title=\"Import Products CSV\"/>\n        <Button size=\"small\" color=\"primary\" variant=\"contained\" component={Link} to={'/admin/product-form/'}>\n          create product\n        </Button>\n      </Box>\n      <ProductsTable/>\n    </div>\n  );\n}\n","import React from 'react';\nimport 'components/App/App.css';\nimport PageProducts from \"components/pages/PageProducts/PageProducts\";\nimport MainLayout from \"components/MainLayout/MainLayout\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport PageProductForm from \"components/pages/PageProductForm/PageProductForm\";\nimport PageCart from \"components/pages/PageCart/PageCart\";\nimport PageOrders from \"components/pages/PageOrders/PageOrders\";\nimport PageOrder from \"components/pages/PageOrder/PageOrder\";\nimport PageProductImport from \"components/pages/admin/PageProductImport/PageProductImport\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <MainLayout>\n            <Route exact path=\"/\">\n              <PageProducts/>\n            </Route>\n            <Route exact path={[\"/admin/product-form/:id\", '/admin/product-form']}>\n              <PageProductForm/>\n            </Route>\n            <Route exact path=\"/cart\">\n              <PageCart />\n            </Route>\n            <Route exact path=\"/admin/orders\">\n              <PageOrders />\n            </Route>\n            <Route exact path=\"/admin/order/:id\">\n              <PageOrder />\n            </Route>\n            <Route exact path=\"/admin/products\">\n              <PageProductImport />\n            </Route>\n          </MainLayout>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from 'store/store';\n\ninterface CounterState {\n  value: number;\n}\n\nconst initialState: CounterState = {\n  value: 0,\n};\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from 'store/counterSlice';\nimport cartReducer from 'store/cartSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    cart: cartReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'components/App/App';\nimport {store} from 'store/store';\nimport {Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport axios from 'axios';\n\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  function(error) {\n    if (error.response.status === 400) {\n      alert(error.response.data?.data);\n    }\n    return Promise.reject(error.response);\n  }\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CssBaseline/>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}